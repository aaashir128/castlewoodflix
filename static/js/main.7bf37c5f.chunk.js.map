{"version":3,"sources":["config/axios.js","config/requests.js","components/Banner.js","components/Nav.js","components/Row.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","API_KEY","requests","fetchTopRated","fetchActionMovies","fetchAdventureMovies","fetchAnimationMovies","fetchComedyMovies","fetchFamilyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchNetflixOriginals","fetchTrending","Banner","str","n","useState","movie","setMovie","useEffect","a","get","request","data","results","Math","floor","random","length","fetchData","className","style","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","substr","Nav","show","handleShow","window","addEventListener","scrollY","removeEventListener","src","alt","Row","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","map","onClick","movieTrailer","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","message","handleClick","poster_path","id","videoId","opts","height","width","playerVars","autoplay","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7bf37c5f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n});\r\n\r\nexport default instance","const API_KEY = \"bbff14127eb5d6c515f846d9ffbde2d3\";\r\n\r\nconst requests = {\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchAdventureMovies: `/discover/movie?api_key=${API_KEY}&with_genres=12`,\r\n  fetchAnimationMovies: `/discover/movie?api_key=${API_KEY}&with_genres=16`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchFamilyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10751`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-us`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport instance from \"../config/axios\";\r\nimport requests from \"../config/requests\";\r\nimport \"./Banner.css\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await instance.get(requests.fetchTopRated);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  const truncate = (str, n) => {\r\n    return str?.length > n ? str.substr(0, n - 2) + \"...\" : str;\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        backgroundSize: \"cover\",\r\n        \r\n        backgroundImage: `url(\"https://image.tmdb.org/t/p/original/${movie?.backdrop_path}\")`,\r\n        backgroundPosition: \"center\",\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner__fadebottom\">\r\n\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, {useEffect, useState } from \"react\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n  const [show, handleShow] = useState(false)\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true)\r\n      }else handleShow(false)\r\n    })\r\n    return () => {\r\n      window.removeEventListener('scroll')\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://scontent.fkhi1-1.fna.fbcdn.net/v/t1.6435-9/126140804_105258228085950_4806496747748946221_n.png?_nc_cat=104&ccb=1-3&_nc_sid=09cbfe&_nc_eui2=AeF-mLAvc7C4aZqVOI_3N_ia7Rm4zngotDXtGbjOeCi0NXKsF7bbEquto9tn3PnVycmo0mvsICNjqy2RX3Y0vb4e&_nc_ohc=XYQ-UffUQhwAX9wMZVz&_nc_ht=scontent.fkhi1-1.fna&oh=dc8b0644b7ff27f5aba28985603ea70e&oe=60C79985\"\r\n        alt=\"CastleWood flix\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/84c20033850498.56ba69ac290ea.png\"\r\n        alt=\"CastleWood flix avatar\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport instance from \"../config/axios\";\r\nimport \"./Row.css\";\r\n\r\nconst baseURL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await instance.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error.message));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            src={`${baseURL}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","import './App.css';\nimport Banner from './components/Banner';\nimport Nav from './components/Nav';\nimport Row from './components/Row';\nimport requests from './config/requests';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Banner />\n      <Row title=\"Netflix Original\" isLargeRow fetchUrl={requests.fetchNetflixOriginals}/>\n      <Row title=\"Top Rated Movies\" fetchUrl={requests.fetchTopRated}/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies}/>\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies}/>\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}